version: "3"

services:
  ################################
  #   Setup frontend react app container
  ################################
  # frontend:
  #   build: ./frontend
  #   # build:
  #   #   context: ./frontend
  #   #   dockerfile: Dockerfile
  #   environment:
  #     - CHOKIDAR_USEPOLLING=true
  #   ports:
  #     - "80:3000"
  #   volumes:
  #     - ./frontend:/app
  #   networks:
  #     - nodejs-network

  ################################
  #   Setup REDIS Server
  ################################
  # redis:
  #   image: redis:3.2-alpine
  #   expose:
  #     - 6379
  #   volumes:
  #     - redis_data:/data
  ################################
  #   Setup Socket Server container
  ################################
  # server:
  #   build: ./server
  #   # command: npm run dev:watch
  #   expose:
  #     - 3001
  #   ports:
  #     - "3001:3001"

  #   # depends_on:
  #   #   - redis
  #   volumes:
  #     - ./server:/app
  #   environment:
  #     - MONGO_HOSTNAME_ENV=mongo
  #     - MONGO_PORT_ENV=27017
  #     - MONGO_DATABASE_NAME_ENV=bl
  #     - MONGO_USERNAME_ENV=root
  #     - MONGO_PASSWORD_ENV=example

  #     - MONGO_URI=mongodb://mongo1:27017,mongo2:27017,mongo3:27017/bl?replicaSet=rs

  #     - PORT=3000
  #     # - ELASTIC_URL=http://elasticsearch.banlist.info:9200
  #     - ELASTIC_URL=http://192.168.1.80:9200
  #     - ELASTIC_USERNAME=elastic
  #     - ELASTIC_PASSWORD=changeme
  #     - ELASTIC_INDEX=banlist_dev

  #     # Backend Drapal 9
  #     - DRUPAL_API_ENV=http://backend_nginx
  #     - DRUPAL_AUTHORIZATION_ENV=c3dpZGVzd29kOjEyMzQ= # Authorization

  #   networks:
  #     - nodejs-network
  
  
  ################################
  #   Setup React-admin container
  ################################
  frontend:
    build: 
      context: ./frontendN
      dockerfile: Dockerfile.dev
    environment:
      - CHOKIDAR_USEPOLLING=true
      - PORT=4049
      - WATCHPACK_POLLING=true
      - HOST_GRAPHAL=http://localhost:4000 # graphql
    ports:
      - "80:4049"
    volumes:
      - ./frontendN/src:/app/src
    #  - ./fn/package.json:/app/package.json
    networks:
      - nodejs
  ################################
  
  ################################
  #   Setup Api Graphql container
  ################################
  graphql:
    build: 
      context: ./graphqlN
      dockerfile: Dockerfile.dev                
    ports:
      - "4000:4000"
    volumes:
      - ./graphqlN:/usr/app                 
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true

      - ELASTIC_URL=http://elasticsearch:9200
      - ELASTIC_USERNAME=elastic
      - ELASTIC_PASSWORD=changeme
      - ELASTIC_INDEX=banlist_dev
      - PORT=4000
      - MONGO_URI=mongodb://mongo1:27017,mongo2:27017,mongo3:27017/bl?replicaSet=rs

      - JWT_SECRET=banlistinfo
    networks:
      - nodejs
  ################################
  
# networks:
#   nodejs:
#     name: banlist-network

networks:
  nodejs:
    external: true 
    name: banlist-network

# networks:
#   default:
#     name: banlist-network
#     external: true
