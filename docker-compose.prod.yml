version: "3"
services:
  ################################
  #   Setup React-admin container
  ################################
  frontend:
    build: 
      context: ./frontendN
      dockerfile: Dockerfile.prod
    env_file:
      - ./env/.env.prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./frontendN/src:/app/src
      - ./uploads:/var/storage
    networks:
      - nodejs
  ################################
  
  ################################
  #   Setup Api Graphql container
  ################################
  graphql:
    build: 
      context: ./graphqlN
      dockerfile: Dockerfile.prod               
    ports:
      - "4000:4000"
    env_file:
      - ./env/.env.prod
    volumes:
      - ./uploads:/app/uploads  
    environment:
      - MONGO_URI=mongodb://${MONGO_INITDB_USERNAME}:${MONGO_INITDB_PASSWORD}@mongo:27017/${MONGO_INITDB_DATABASE}?authMechanism=DEFAULT
    networks:
      - nodejs
  ################################

  ################################
  #   Setup Api Mongo and mongo-express container
  ################################
  mongo:
    image: mongo:${MONGOD_VERSION}
    expose:
      - 27017
    ports:
      - "27017:27017"
    env_file:
      - ./env/.env.prod
    volumes:
      - ./mongo-single/data:/data/db
      - ./mongo-single/restore:/mongo-single/restore
      - ./mongo-single/mongod.conf:/etc/mongod.conf
    restart: always
    networks:
      - nodejs
  
networks:
  nodejs:
    external: true 
    name: banlist-network
